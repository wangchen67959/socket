<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context 
    	http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/aop  
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<context:component-scan base-package="com.socket" />

	<aop:aspectj-autoproxy proxy-target-class="true" />
	<!-- 使用disconf必须添加以下配置 -->
	<bean id="disconfMgrBean" class="com.baidu.disconf.client.DisconfMgrBean"
		destroy-method="destroy">
		<property name="scanPackage" value="com.socket" />
	</bean>
	<bean id="disconfMgrBean2" class="com.baidu.disconf.client.DisconfMgrBeanSecond"
		init-method="init" destroy-method="destroy">
	</bean>
	<!--################################################################ -->
	<!-- 使用托管方式的disconf配置(无代码侵入, 配置更改会自动reload) -->
	<bean id="configproperties_disconf"
		class="com.baidu.disconf.client.addons.properties.ReloadablePropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:application.properties</value>
				<value>classpath:log4j.properties</value>
				<!-- <value>classpath:redis.properties</value> -->
				<value>classpath:dubbo.properties</value>
			</list>
		</property>
	</bean>
	<!--记录配置文件与哪些bean有关系 -->
	<bean id="propertyConfigurer"
		class="com.baidu.disconf.client.addons.properties.ReloadingPropertyPlaceholderConfigurer">
		<property name="ignoreResourceNotFound" value="true" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="propertiesArray">
			<list>
				<ref bean="configproperties_disconf" />
			</list>
		</property>
	</bean>

	<!-- 以下配置适用于比较重的资源，仅将配置托管于分布式服务，当服务启动后自动下载文件至本地， 当在服务进行更新后重新下载该文件，非.properties可添加回调函数进行配置本地的reload -->

	<!-- 使用托管方式的disconf配置(无代码侵入, 配置更改不会自动reload) -->
	<bean id="configproperties_no_reloadable_disconf"
		class="com.baidu.disconf.client.addons.properties.ReloadablePropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:redis.properties</value>
			</list>
		</property>
	</bean>
	<bean id="propertyConfigurerForProject1"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreResourceNotFound" value="true" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="propertiesArray">
			<list>
				<ref bean="configproperties_no_reloadable_disconf" />
			</list>
		</property>
	</bean>
	
	<!-- bean 配置 -->
	<bean id="redisXmlBean" class="com.socket.proBean.RedisXmlBean"
		scope="singleton">
		<property name="host" value="${redis.host}" />
		<property name="port" value="${redis.port}" />
	</bean>

	<bean id="dubboXmlBean" class="com.socket.proBean.DubboXmlBean"
		scope="singleton">
		<property name="applicationName" value="${dubbo.application.name}" />
		<property name="registryAddress" value="${dubbo.registry.address}" />
		<property name="protocolName" value="${dubbo.protocol.name}" />
		<property name="protocolPort" value="${dubbo.protocol.port}" />
		<property name="registryRegister" value="${dubbo.registry.register}" />
	</bean>

	<import resource="classpath:dubbo-provider.xml" />

</beans>  